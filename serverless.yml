service: tomoram-io

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-webpack

custom:
  siteName: tomoram.io
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: dist
  hostedZoneName: tomoram.io
  aliasHostedZoneId: Z3GKZC51ZF0DB4
  aliasDNSName: s3-website.eu-west-2.amazonaws.com
  scripts:
    hooks:
      'before:deploy:createDeploymentArtifacts': npm run compile-frontend
  webpack:
    webpackConfig: backend.webpack.config.js
    includeModules: true

provider:
  name: aws
  region: eu-west-2
  runtime: nodejs8.10

functions:
  hello:
    handler: src/hello.handler
    events:
      - http:
          path: hello
          method: get

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html

    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]

    DnsRecord:
      Type: "AWS::Route53::RecordSet"
      Properties:
        AliasTarget:
          DNSName: ${self:custom.aliasDNSName}
          HostedZoneId: ${self:custom.aliasHostedZoneId}
        HostedZoneName: ${self:custom.siteName}.
        Name:
          Ref: StaticSite
        Type: 'A'
